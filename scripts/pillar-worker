#!/usr/bin/env ruby

require 'pillar'
# require 'childprocess'
# require 'net/http'
require 'json'

# AGENT_HOSTS = ['127.0.0.1:4567']

# ETCD_HOST = '127.0.0.1'
# ETCD_PORT = '4001'

# payload = {
#   worker_id: SecureRandom.uuid,
#   name: "worker-#{Pillar.epoch}",
#   args: "Do something with this please."
# }.to_json

# puts payload

# host = AGENT_HOSTS.sample
# # `curl -X POST -H "application/json" -d '#{payload}' #{host}/workers`
# uri = URI.parse("http://#{host}/workers")
# puts uri
# puts Net::HTTP.post_form(uri, {worker: payload}).response

# process = ChildProcess.build("/git/pillar/scripts/print-time", '')
# process.detach = true
# process.start




# example = Pillar::Worker.configure do |w|

#   w.env  = {:MY_ENV => '/tmp/dump'}
#   w.args = ['/location/of/my/script', '--arg==32']

#   w.execute = lambda do
#     puts @args
#     puts @env
#   end

# end

# example.execute.call



puts Pillar::Worker.new.inspect
params = { args: ['/location/of/my/script', '--arg==32'], env: {MY_ENV: '/tmp/dump'} }
wrk = Pillar::Worker.new params
puts wrk.to_json
puts JSON.parse wrk.to_json
puts (Pillar::Serialization.from_json wrk.to_json).inspect
# puts la.class
# # puts la.instance_variables.each {|x| instance_variable_get(x) }
# la.instance_variables.each {|x| puts la.instance_variable_get(x) }
# puts la.inspect
# puts MyWorker.json_create(MyWorker.new.to_json)


